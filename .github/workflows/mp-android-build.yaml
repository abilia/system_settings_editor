name: MemoPlanner Android Build

on:
  push:
    branches:
      - master
      - release
    paths-ignore:
      - 'ios/**'
      - 'test/**'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        flavor: ['mp', 'mpgo']
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.10.1'

    - run: flutter doctor
    - run: flutter test --dart-define flavor=${{ matrix.flavor }}

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: test
    strategy:
      matrix:
        flavor: ['mp', 'mpgo']
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.10.3'

    - id: set_build_number
      run: |
        version=$(( $GITHUB_RUN_NUMBER + 2000))
        echo "::set-output name=buildnumber::$version"

    - id: set_release_type
      run: |
        type=$([[ $GITHUB_REF == "refs/heads/release" ]] && echo "release" || echo "alpha")
        echo "::set-output name=releasetype::$type"

    - run: |
        flutter build appbundle --flavor ${{ matrix.flavor }} --build-number=${{ steps.set_build_number.outputs.buildnumber }} --dart-define release=${{ steps.set_release_type.outputs.releasetype }} --dart-define flavor=${{ matrix.flavor }}
      env:
        APPCENTER_KEYSTORE_PASSWORD: ${{ secrets.APPCENTER_KEYSTORE_PASSWORD }}
        APPCENTER_KEY_PASSWORD: ${{ secrets.APPCENTER_KEY_PASSWORD }}
    - uses: actions/upload-artifact@v3
      with:
        name: app-${{ matrix.flavor }}-release
        path: build/app/outputs/bundle/**/app-${{ matrix.flavor }}-release.aab
        retention-days: 1

  upload:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build
    strategy:
      fail-fast: false
      matrix:
        flavor: ['mp', 'mpgo']
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-${{ matrix.flavor }}-release
      - uses: r0adkll/upload-google-play@v1
        if: ${{ contains(matrix.flavor, 'go') }}
        with:
          serviceAccountJsonPlainText: ${{ env.SERVICE_ACCOUNT_JSON }}
          packageName: com.abilia.memoplannergo
          releaseFiles: ./**/app-${{ matrix.flavor }}-release.aab
          track: alpha
          status: completed
        env:
          SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
      - uses: r0adkll/upload-google-play@v1
        if: ${{ !contains(matrix.flavor, 'go') }}
        with:
          serviceAccountJsonPlainText: ${{ env.SERVICE_ACCOUNT_JSON }}
          packageName: com.abilia.memoplanner
          releaseFiles: ./**/app-${{ matrix.flavor }}-release.aab
          track: alpha
          status: completed
        env:
          SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}

      - name: Clean up uploaded artifacts from GitHub storage
        uses: geekyeggo/delete-artifact@v1
        with:
          name: app-${{ matrix.flavor }}-release

